/*
 * 2. * Создать класс Figure для работы с геометрическими фигурами.
 * В качестве полей класса задаются цвет фигуры, состояние «видимое/невидимое».
 * Реализовать операции: передвижение геометрической фигуры по горизонтали,
 * по вертикали, изменение цвета, опрос состояния (видимый/невидимый).
 * Метод вывода на экран должен выводить состояние всех полей объекта.
 * Создать класс Point (точка) как потомок геометрической фигуры. 
 * Создать класс Circle (окружность) как потомок точки.
 * В класс Circle добавить метод, который вычисляет площадь окружности.
 * Создать класс Rectangle (прямоугольник) как потомок точки, реализовать метод вычисления площади прямоугольника.
 * Точка, окружность, прямоугольник должны поддерживать методы передвижения по горизонтали и вертикали, изменения цвета.
 * Подумать, какие методы можно объявить в интерфейсе, нужно ли объявлять абстрактный класс,
 * какие методы и поля будут в абстрактном классе, какие методы будут виртуальными, какие перегруженными.
 */

/// <summary>
/// ТОчка
/// </summary>
public class Point : Figure
{
    public override void Draw() => Console.WriteLine("Point: " + ToString());
    public override double Area() => 0;

    #region конструкторы
    public Point() { }
    public Point(int X, int Y) : base(X, Y) { }
    public Point(int X, int Y, uint Color, bool Visible) : base(X, Y, Color, Visible) { }
    #endregion

}
